import os
import time

import telebot
from telebot import types

from dotenv import load_dotenv


def configure():
    load_dotenv()


configure()
chat_bot = telebot.TeleBot(f"{os.getenv('TELEBOT_TOKEN')}")


@chat_bot.message_handler(commands=["start"])
def select_language(message):
    markup = types.ReplyKeyboardMarkup()
    english_lng = types.KeyboardButton("üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø Continue in English")
    ukrainian_lng = types.KeyboardButton("Û†ÅßÛ†Å¢Û†Å•Û†ÅÆüá∫üá¶Û†Åø –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é")
    markup.row(english_lng, ukrainian_lng)
    chat_bot.send_message(message.chat.id, "Choose language / –û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è", parse_mode="html",
                          reply_markup=markup)


@chat_bot.message_handler(commands=["index_en"])
def eng_start(message):
    markup = types.ReplyKeyboardMarkup()
    en_button_1 = types.KeyboardButton("üìïüëÄ Quick navigate guide")
    en_button_2 = types.KeyboardButton("ü§î What is MoonAudioProduction?")
    en_button_3 = types.KeyboardButton("üíº View Our Portfolio")
    en_button_4 = types.KeyboardButton("üìù Complete phrase list")
    markup.row(en_button_1, en_button_2, en_button_3)
    markup.row(en_button_4)
    greeting_message = f"Hello, <b>{message.from_user.first_name} {message.from_user.last_name}</b>. " \
                       f"MoonAudioProduction bot is glad to welcome you! " \
                       f"Our custom sound effects and music make your projects more colorful!"
    chat_bot.send_message(message.chat.id, greeting_message, parse_mode="html", reply_markup=markup)
    file = open("static/images/home_moon.png", "rb")
    chat_bot.send_photo(message.chat.id, file, reply_markup=markup)
    second_message = "How can I help You?"
    chat_bot.send_message(message.chat.id, second_message, parse_mode="html")


@chat_bot.message_handler(commands=["index_ua"])
def ua_start(message):
    markup = types.ReplyKeyboardMarkup()
    ua_button_1 = types.KeyboardButton("üìïüëÄ –ö–æ—Ä–æ—Ç–∫–∏–π –ø–æ—Å—ñ–±–Ω–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
    ua_button_2 = types.KeyboardButton("ü§î –©–æ —Ç–∞–∫–µ MoonAudioProduction?")
    ua_button_3 = types.KeyboardButton("üíº –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ")
    ua_button_4 = types.KeyboardButton("üìù –ü–æ–≤–Ω–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é")
    markup.row(ua_button_1, ua_button_2, ua_button_3)
    markup.row(ua_button_4)
    greeting_message = f"–ü—Ä–∏–≤—ñ—Ç, <b>{message.from_user.first_name} {message.from_user.last_name}</b>. " \
                       f"MoonAudioProduction —á–∞—Ç-–±–æ—Ç —Ä–∞–¥–∏–π –≤—ñ—Ç–∞—Ç–∏ —Ç–µ–±–µ! " \
                       f"–ù–∞—à—ñ –∞–≤—Ç–æ—Ä—Å—å–∫—ñ –∑–≤—É–∫–æ–≤—ñ –µ—Ñ–µ–∫—Ç–∏ —Ç–∞ –æ—Ä–∫–µ—Å—Ç—Ä–æ–≤–∞ –º—É–∑–∏–∫–∞ –∑–∞–±–µ–∑–ø–µ—á–∞—Ç—å —è–∫—ñ—Å–Ω–æ –Ω–∞–ª–µ–∂–Ω–µ –∞–∫—É—Å—Ç–∏—á–Ω–µ " \
                       f"–æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –í–∞—à–æ–≥–æ –ø—Ä–æ—î–∫—Ç—É —â–æ –≤–∏–≥—ñ–¥–Ω–æ –≤–∏—Ä—ñ–∑–Ω—è—Ç–∏–º–µ –π–æ–≥–æ –∑-–ø–æ–º—ñ–∂ —ñ–Ω—à–∏—Ö!"
    chat_bot.send_message(message.chat.id, greeting_message, parse_mode="html", reply_markup=markup)
    file = open("static/images/home_moon.png", "rb")
    chat_bot.send_photo(message.chat.id, file, reply_markup=markup)
    second_message = "–ß–∏–º —è –º–æ–∂—É –í–∞–º –¥–æ–ø–æ–º–æ–≥—Ç–∏?"
    chat_bot.send_message(message.chat.id, second_message, parse_mode="html")


@chat_bot.message_handler(commands=["info_en"])
def author_info(message):
    markup = types.ReplyKeyboardMarkup(row_width=2)
    contact_author = types.KeyboardButton("üìû Contact the Author")
    full_name = types.KeyboardButton("MoonAudioProduction YouTube chanel")
    back_home = types.KeyboardButton("‚Ü©Ô∏è Back to Main menu")
    markup.add(contact_author, full_name, back_home)
    chat_bot.send_message(message.chat.id, "Make your choice", reply_markup=markup)


@chat_bot.message_handler(commands=["info_ua"])
def author_info(message):
    markup = types.ReplyKeyboardMarkup(row_width=2)
    contact_author = types.KeyboardButton("üìû –ó–≤ º—è–∑–æ–∫ –∑ –∞–≤—Ç–æ—Ä–æ–º")
    full_name = types.KeyboardButton("MoonAudioProduction YouTube –∫–∞–Ω–∞–ª")
    back_home = types.KeyboardButton("‚Ü©Ô∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é")
    markup.add(contact_author, full_name, back_home)
    chat_bot.send_message(message.chat.id, "–ë—É–¥—å-–ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é", reply_markup=markup)


@chat_bot.message_handler(content_types=["photo"])
def get_user_photo(message):
    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton("Delete image / –í–∏–¥–∞–ª–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è", callback_data="delete")
    markup.row(button)
    chat_bot.reply_to(message, "Wow! Your picture looks awesome! üòÑ\n–í–∞—É! –¶–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Å—Ç–æ —Å—É–ø–µ—Ä!! üòÑ",
                      reply_markup=markup)


@chat_bot.message_handler(content_types=["sticker"])
def get_user_photo(message):
    chat_bot.reply_to(message, "Wow! Your sticker looks good üòÑ\n–í–∞—É! –¢–≤—ñ–π —Å—Ç—ñ–∫–µ—Ä —Å—É–ø–µ—Ä–æ–≤–∏–π!! üòÑ")


@chat_bot.message_handler(
    func=lambda message: message.text in ["Cartoon Sounds", "Cartoon Sound", "Cartoon sounds", "Cartoon sound",
                                          "Cartoon", "cartoon"]
)
def cartoon_page(message):
    cartoon_text = "<b>Funny high quality Cartoon sounds</b>"
    cartoon_image = open("static/images/sound_effects/cartoon.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("Cartoon Sounds", url="https://audiojungle.net/collections/7794721-cartoon-sound"))
    chat_bot.send_photo(message.chat.id, cartoon_image, caption=cartoon_text, parse_mode="html", reply_markup=markup)


@chat_bot.message_handler(
    func=lambda message: message.text in ["–ó–≤—É–∫–∏ –¥–æ –ú—É–ª—å—Ç—Ñ—ñ–ª—å–º—ñ–≤", "–ú—É–ª—å—Ç—Ñ—ñ–ª—å–º–∏", "–º—É–ª—å—Ç—Ñ—ñ–ª—å–º–∏", "–º—É–ª—å—Ç—Ñ—ñ–ª—å–º",
                                          "–ú—É–ª—å—Ç–∏–∫", "–º—É–ª—å—Ç–∏–∫", "–ú—É–ª—å—Ç—è—à–Ω—ñ –∑–≤—É–∫–∏", "–º—É–ª—å—Ç—è—à–Ω—ñ –∑–≤—É–∫–∏", "–ú—É–ª—å—Ç—è—à–Ω—ñ",
                                          "–º—É–ª—å—Ç—è—à–Ω—ñ"]
)
def cartoon_page(message):
    cartoon_text = "<b>–ö—É–º–µ–¥–Ω—ñ –∑–≤—É–∫–∏ –¥–æ –ú—É–ª—å—Ç—Ñ—ñ–ª—å–º—ñ–≤</b>"
    cartoon_image = open("static/images/sound_effects/cartoon.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("–ó–≤—É–∫–∏ –¥–æ –ú—É–ª—å—Ç—Ñ—ñ–ª—å–º—ñ–≤",
                                   url="https://audiojungle.net/collections/7794721-cartoon-sound"))
    chat_bot.send_photo(message.chat.id, cartoon_image, caption=cartoon_text, parse_mode="html", reply_markup=markup)


@chat_bot.message_handler(
    func=lambda message: message.text in ["Domestic Sounds", "Domestic sounds", "Domestic Sound", "Domestic sound",
                                          "Domestic", "domestic"]
)
def domestic_page(message):
    domestic_text = "<b>Natural high quality Domestic sounds</b>"
    domestic_image = open("static/images/sound_effects/domestic.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "Domestic Sounds", url="https://audiojungle.net/collections/7794746-domestic-sounds"
        )
    )
    chat_bot.send_photo(message.chat.id, domestic_image, caption=domestic_text, parse_mode="html", reply_markup=markup)


@chat_bot.message_handler(
    func=lambda message: message.text in ["–ü–æ–±—É—Ç–æ–≤—ñ –ó–≤—É–∫–∏", "–ü–æ–±—É—Ç–æ–≤—ñ –∑–≤—É–∫–∏", "–ø–æ–±—É—Ç–æ–≤—ñ –∑–≤—É–∫–∏", "–ü–æ–±—É—Ç–æ–≤—ñ", "–ø–æ–±—É—Ç–æ–≤—ñ",
                                          "–ü–æ–±—É—Ç", "–ø–æ–±—É—Ç"]
)
def domestic_page(message):
    domestic_text = "<b>–†–µ–∞–ª—ñ—Å—Ç–∏—á–Ω—ñ –≤–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω—ñ –ü–æ–±—É—Ç–æ–≤—ñ –∑–≤—É–∫–∏</b>"
    domestic_image = open("static/images/sound_effects/domestic.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "–ü–æ–±—É—Ç–æ–≤—ñ –ó–≤—É–∫–∏", url="https://audiojungle.net/collections/7794746-domestic-sounds"
        )
    )
    chat_bot.send_photo(message.chat.id, domestic_image, caption=domestic_text, parse_mode="html", reply_markup=markup)


@chat_bot.message_handler(
    func=lambda message: message.text in ["Futuristic Sounds", "Futuristic Sound", "Futuristic sounds",
                                          "Futuristic sound", "Futuristic", "futuristic", "Sci-Fi Sounds",
                                          "Sci-Fi sounds", "Sci-Fi", "Sci-fi", "sci-fi", "Scifi"]
)
def futuristic_page(message):
    futuristic_text = "<b>Unreal high quality Futuristic sounds</b>"
    futuristic_image = open("static/images/sound_effects/futuristic.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "Futuristic Sounds", url="https://audiojungle.net/collections/8554656-futuristic-sounds"
        )
    )
    chat_bot.send_photo(
        message.chat.id, futuristic_image, caption=futuristic_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–Ω—ñ –∑–≤—É–∫–∏", "—Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–Ω—ñ –∑–≤—É–∫–∏", "–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–Ω—ñ", "—Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–Ω—ñ"]
)
def futuristic_page(message):
    futuristic_text = "<b>–¢–∞—î–º–Ω–∏—á—ñ —Ç–∞ –Ω–µ–∑–µ–º–Ω—ñ –≤–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω—ñ –§—É—Ç—É—Ä–∏—Å—Ç–∏—á–Ω—ñ –∑–≤—É–∫–∏</b>"
    futuristic_image = open("static/images/sound_effects/futuristic.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–Ω—ñ –∑–≤—É–∫–∏", url="https://audiojungle.net/collections/8554656-futuristic-sounds"
        )
    )
    chat_bot.send_photo(
        message.chat.id, futuristic_image, caption=futuristic_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["Game Sounds", "Game sounds", "Game Sound", "Game sound", "Game", "game"]
)
def game_page(message):
    game_text = "<b>Powerful and unique high quality Game sounds</b>"
    game_image = open("static/images/sound_effects/game.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "Game Sounds", url="https://audiojungle.net/collections/8107721-game-sounds"
        )
    )
    chat_bot.send_photo(
        message.chat.id, game_image, caption=game_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["–Ü–≥—Ä–æ–≤—ñ –∑–≤—É–∫–∏", "—ñ–≥—Ä–æ–≤—ñ –∑–≤—É–∫–∏", "–Ü–≥—Ä–æ–≤—ñ", "—ñ–≥—Ä–æ–≤—ñ", "–ì—Ä–∞", "–≥—Ä–∞"]
)
def game_page(message):
    game_text = "<b>–ü–æ—Ç—É–∂–Ω—ñ —Ç–∞ —è—Å–∫—Ä–∞–≤—ñ –≤–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω—ñ –Ü–≥—Ä–æ–≤—ñ –∑–≤—É–∫–∏</b>"
    game_image = open("static/images/sound_effects/game.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "–Ü–≥—Ä–æ–≤—ñ –∑–≤—É–∫–∏", url="https://audiojungle.net/collections/8107721-game-sounds"
        )
    )
    chat_bot.send_photo(
        message.chat.id, game_image, caption=game_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["Human Sounds", "Human sounds", "human sounds", "Human Sound", "Human",
                                          "human", "Human sound", "Baby", "baby", "Babies"]
)
def human_page(message):
    human_text = "<b>This collection includes unique sound effects that can be useful for proper acoustic design " \
                   "of human sounds</b>"
    human_image = open("static/images/sound_effects/human.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "Human Sounds", url="https://audiojungle.net/collections/7794758-human-sounds"
        )
    )
    chat_bot.send_photo(
        message.chat.id, human_image, caption=human_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["–õ—é–¥—Å—å–∫—ñ –∑–≤—É–∫–∏", "–ª—é–¥—Å—å–∫—ñ –∑–≤—É–∫–∏", "–õ—é–¥–∏–Ω–∞", "–ª—é–¥–∏–Ω–∞",
                                          "–õ—é–¥—Å—å–∫—ñ", "–ª—é–¥—Å—å–∫—ñ"]
)
def human_page(message):
    human_text = "<b>–î–∞–Ω–∞ –∫–æ–ª–µ–∫—Ü—ñ—è –≤–∫–ª—é—á–∞—î –≤ —Å–µ–±–µ —Ä–µ–∞–ª—å–Ω—ñ –∑–≤—É–∫–∏ —â–æ –ø—Ä–∏—Ç–∞–º–∞–Ω–Ω—ñ –ø–æ–≤–µ–¥—ñ–Ω—Ü—ñ —Ç–∞ —Å–ø–æ—Å–æ–±—É –∂–∏—Ç—Ç—è –ª—é–¥–∏–Ω–∏</b>"
    human_image = open("static/images/sound_effects/human.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "–õ—é–¥—Å—å–∫—ñ –∑–≤—É–∫–∏", url="https://audiojungle.net/collections/7794758-human-sounds"
        )
    )
    chat_bot.send_photo(
        message.chat.id, human_image, caption=human_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["Industrial Sounds", "Industrial sounds", "Industrial Sound",
                                          "Industrial sound", "industrial sounds", "industrial sound", "Industrial",
                                          "industrial", "Industry", "industry"]
)
def industrial_page(message):
    industrial_text = "<b>This collection includes unique sound effects that can be useful for proper acoustic design " \
                   "of your videos, films, cartoons or other media projects</b>"
    industrial_image = open("static/images/sound_effects/industrial.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "Industrial Sounds", url="https://audiojungle.net/collections/8107747-industrial-sounds"
        )
    )
    chat_bot.send_photo(
        message.chat.id, industrial_image, caption=industrial_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["–ü—Ä–æ–º–∏—Å–ª–æ–≤—ñ –ó–≤—É–∫–∏", "–ü—Ä–æ–º–∏—Å–ª–æ–≤—ñ", "–ø—Ä–æ–º–∏—Å–ª–æ–≤—ñ",
                                          "–ø—Ä–æ–º–∏—Å–ª–æ–≤—ñ –∑–≤—É–∫–∏", "—ñ–Ω–¥—É—Å—Ç—Ä—ñ–∞–ª—å–Ω—ñ", "–Ü–Ω–¥—É—Å—Ç—Ä—ñ–∞–ª—å–Ω—ñ"]
)
def industrial_page(message):
    industrial_text = "<b>–î–∞–Ω–∞ –∫–æ–ª–µ–∫—Ü—ñ—è –º–æ–∂–µ –±—É—Ç–∏ –∫–æ—Ä–∏—Å–Ω–æ—é –≤ –ø–∏—Ç–∞–Ω–Ω—ñ –∞–∫—É—Å—Ç–∏—á–Ω–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –≤–∞—à–∏—Ö –≤—ñ–¥–µ–æ, —Ñ—ñ–ª—å–º—ñ–≤, " \
                      "–∞–±–æ —ñ–Ω—à–∏—Ö –º–µ–¥—ñ–π–Ω–∏—Ö –ø—Ä–æ—î–∫—Ç—ñ–≤</b>"
    industrial_image = open("static/images/sound_effects/industrial.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "–ü—Ä–æ–º–∏—Å–ª–æ–≤—ñ –∑–≤—É–∫–∏", url="https://audiojungle.net/collections/8107747-industrial-sounds"
        )
    )
    chat_bot.send_photo(
        message.chat.id, industrial_image, caption=industrial_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["Interface Sounds", "Interface sounds", "Interface Sound", "Interface sound",
                                          "interface sounds", "interface sound", "Interface", "interface", "UI", "ui"]
)
def interface_page(message):
    interface_text = "<b>This collection includes unique sound effects that can be useful in applications, " \
                     "video-games, etc.</b>"
    interface_image = open("static/images/sound_effects/interface.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "Interface Sounds", url="https://audiojungle.net/collections/7794768-interface-sounds"
        )
    )
    chat_bot.send_photo(
        message.chat.id, interface_image, caption=interface_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["–ó–≤—É–∫–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É", "–∑–≤—É–∫–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É", "–Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å", "—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å", "—é–∞–π"]
)
def interface_page(message):
    interface_text = "<b>–î–∞–Ω–∞ –∫–æ–ª–µ–∫—Ü—ñ—è —Å—Ç–∞–Ω–µ –≤ –Ω–∞–≥–æ–¥—ñ –≤ –ø–∏—Ç–∞–Ω–Ω—ñ –∞–∫—É—Å—Ç–∏—á–Ω–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –≤—ñ–¥–µ–æ—ñ–≥—Ä, –¥–æ–¥–∞—Ç–∫—ñ–≤, —Ç–æ—â–æ</b>"
    interface_image = open("static/images/sound_effects/interface.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "–ó–≤—É–∫–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É", url="https://audiojungle.net/collections/7794768-interface-sounds"
        )
    )
    chat_bot.send_photo(
        message.chat.id, interface_image, caption=interface_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["Nature Sounds", "Nature sounds", "Nature Sound", "nature sounds",
                                          "nature sound", "Nature", "nature"]
)
def nature_page(message):
    nature_text = "<b>This collection includes exclusively realistic sound effects that can be useful in videos, " \
           "films or video-games</b>"
    nature_image = open("static/images/sound_effects/nature.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "Nature Sounds", url="https://audiojungle.net/collections/7794793-nature-sounds"
        )
    )
    chat_bot.send_photo(
        message.chat.id, nature_image, caption=nature_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["–ü—Ä–∏—Ä–æ–¥–Ω—ñ –∑–≤—É–∫–∏", "–ø—Ä–∏—Ä–æ–¥–Ω—ñ –∑–≤—É–∫–∏", "–ü—Ä–∏—Ä–æ–¥–∞", "–ø—Ä–∏—Ä–æ–¥–∞", "–ó–≤—É–∫–∏ –ø—Ä–∏—Ä–æ–¥–∏",
                                          "–∑–≤—É–∫–∏ –ø—Ä–∏—Ä–æ–¥–∏", "–ü—Ä–∏—Ä–æ–¥–Ω—ñ", "–ø—Ä–∏—Ä–æ–¥–Ω—ñ"]
)
def nature_page(message):
    nature_text = "<b>–î–∞–Ω–∞ –∫–æ–ª–µ–∫—Ü—ñ—è –º—ñ—Å—Ç–∏—Ç—å –≤–∏–∫–ª—é—á–Ω–æ —Ä–µ–∞–ª—å–Ω—ñ –∑–≤—É–∫–∏ –ø—Ä–∏—Ä–æ–¥–∏, —â–æ –±—É–¥—É—Ç—å –∫–æ—Ä–∏—Å–Ω—ñ –≤ —Ä–∞–º–∫–∞—Ö –≤–∞—à–∏—Ö —Ç–≤–æ—Ä—á–∏—Ö " \
                  "–ø—Ä–æ—î–∫—Ç—ñ–≤</b>"
    nature_image = open("static/images/sound_effects/nature.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "–ü—Ä–∏—Ä–æ–¥–Ω—ñ –∑–≤—É–∫–∏", url="https://audiojungle.net/collections/7794793-nature-sounds"
        )
    )
    chat_bot.send_photo(
        message.chat.id, nature_image, caption=nature_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["Transitions & Movement", "Transitions & movement", "transitions & movement",
                                          "transitions", "transition", "Movement", "Movements", "movement", "whoosh",
                                          "Whoosh", "whooshes", "Whooshes", "Swhoosh", "swhoosh", "T&M"]
)
def whooshes_page(message):
    whooshes_text = "<b>This collection contains a variety of sound effects that perfectly complement your project.</b>"
    whooshes_image = open("static/images/sound_effects/whoosh.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "Transitions & Movement", url="https://audiojungle.net/collections/7794731-transitions-movement"
        )
    )
    chat_bot.send_photo(
        message.chat.id, whooshes_image, caption=whooshes_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["–¢—Ä–∞–Ω–∑—ñ—à–Ω—Å", "—Ç—Ä–∞–Ω–∑—ñ—à–Ω—Å", "—Ç—Ä–∞–Ω–∑—ñ—à–Ω", "—Ç—Ä–∞–Ω–∑—ñ—à–Ω", "–í—É—à", "–≤—É—à", "–í—É—à–∞–∫–∏",
                                          "–≤—É—à–∞–∫–∏"]
)
def whooshes_page(message):
    whooshes_text = "<b>–î–∞–Ω–∞ –∫–æ–ª–µ–∫—Ü—ñ—è –º—ñ—Å—Ç–∏—Ç—å –≤–µ–ª–∏—á–µ–∑–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–∞–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω–∏—Ö –∑–≤—É–∫–æ–≤–∏—Ö –µ—Ñ–µ–∫—Ç—ñ–≤ –ø–µ—Ä–µ—Ö–æ–¥—É</b>"
    whooshes_image = open("static/images/sound_effects/whoosh.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "–¢—Ä–∞–Ω–∑—ñ—à–Ω—Å", url="https://audiojungle.net/collections/7794731-transitions-movement"
        )
    )
    chat_bot.send_photo(
        message.chat.id, whooshes_image, caption=whooshes_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["Urban Sounds", "Urban sounds", "urban sounds", "Urban", "urban", "City",
                                          "city"]
)
def urban_page(message):
    urban_text = "<b>This collection includes unique sound effects that are useful for proper acoustic design " \
           "of urban sounds</b>"
    urban_image = open("static/images/sound_effects/urban.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "Urban Sounds", url="https://audiojungle.net/collections/7794785-urban-sounds"
        )
    )
    chat_bot.send_photo(message.chat.id, urban_image, caption=urban_text, parse_mode="html", reply_markup=markup)


@chat_bot.message_handler(
    func=lambda message: message.text in ["–ó–≤—É–∫–∏ –º—ñ—Å—Ç–∞", "–∑–≤—É–∫–∏ –º—ñ—Å—Ç–∞", "–ú—ñ—Å—å–∫—ñ –∑–≤—É–∫–∏", "–º—ñ—Å—å–∫—ñ –∑–≤—É–∫–∏", "–£—Ä–±–∞–Ω",
                                          "—É—Ä–±–∞–Ω"]
)
def urban_page(message):
    urban_text = "<b>–î–∞–Ω–∞ –∫–æ–ª–µ–∫—Ü—ñ—è –º—ñ—Å—Ç–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ñ –∑–≤—É–∫–æ–≤—ñ –µ—Ñ–µ–∫—Ç–∏ —â–æ –∑–∞–ø–∏—Å–∞–Ω—ñ —É —Å–∞–º–æ–º—É —Å–µ—Ä–¥—Ü—ñ –≤–µ–ª–∏–∫–æ–≥–æ –º—ñ—Å—Ç–∞</b>"
    urban_image = open("static/images/sound_effects/urban.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "–ó–≤—É–∫–∏ –º—ñ—Å—Ç–∞", url="https://audiojungle.net/collections/7794785-urban-sounds"
        )
    )
    chat_bot.send_photo(message.chat.id, urban_image, caption=urban_text, parse_mode="html", reply_markup=markup)


@chat_bot.message_handler(
    func=lambda message: message.text in ["üé¶ Cinematic Music", "Cinematic Music", "Cinematic music", "cinematic music",
                                          "cinematic", "Cinematic", "Cinema", "cinema", "Cine", "cine", "Film", "film",
                                          "Movie", "movie", "Movies", "movies"]
)
def cinematic_music_page(message):
    urban_text = "<b>This collection includes unique orchestral music composed, mixed and mastered" \
                 " by Ievgenii Balabanov. Presented compositions can useful for proper acoustic design of films " \
                 "and video games</b>"
    urban_image = open("static/images/cinematic_music/cinema.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "Epic Cinematic Music", url="https://audiojungle.net/collections/8574718-epic-cinematic-music"
        )
    )
    chat_bot.send_photo(message.chat.id, urban_image, caption=urban_text, parse_mode="html", reply_markup=markup)


@chat_bot.message_handler(
    func=lambda message: message.text in ["üé¶ –ú—É–∑–∏–∫–∞ –¥–æ —Ñ—ñ–ª—å–º—ñ–≤", "–∫—ñ–Ω–æ", "–¥–æ —Ñ–∏–ª—å–º—ñ–≤", "–¥–æ –∫—ñ–Ω–æ", "–§—ñ–ª—å–º", "—Ñ—ñ–ª—å–º",
                                          "–§—ñ–ª—å–º–∏", "—Ñ—ñ–ª—å–º–∏", "–ö—ñ–Ω–æ—Ñ—ñ–ª—å–º", "–∫—ñ–Ω–æ—Ñ—ñ–ª—å–º", "–ú—É–∑–∏–∫–∞ –¥–æ —Ñ—ñ–ª—å–º—ñ–≤",
                                          "–º—É–∑–∏–∫–∞ –¥–æ —Ñ—ñ–ª—å–º—ñ–≤"]
)
def cinematic_music_page(message):
    urban_text = "<b>–î–∞–Ω–∞ –∫–æ–ª–µ–∫—Ü—ñ—è –º—ñ—Å—Ç–∏—Ç—å –∞–≤—Ç–æ—Ä—Å—å–∫—ñ –æ—Ä–∫–µ—Å—Ç—Ä–æ–≤—ñ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—ó, —â–æ —Å—Ç–≤–æ—Ä–µ–Ω—ñ, –∞—Ä–∞–Ω–∂–æ–≤–∞–Ω—ñ —Ç–∞ –∑–≤–µ–¥–µ–Ω—ñ " \
                 "–Ñ–≤–≥–µ–Ω—ñ—î–º –ë–∞–ª–∞–±–∞–Ω–æ–≤–∏–º. –ù–∞–≤–µ–¥–µ–Ω—ñ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—ó —Å—Ç–∞–Ω—É—Ç—å —è—Å–∫—Ä–∞–≤–∏–º –¥–æ–ø–æ–≤–Ω–µ–Ω–Ω—è–º –≤–∞—à–∏—Ö —Ç–≤–æ—Ä—á–∏—Ö –ø—Ä–æ—î–∫—Ç—ñ–≤</b>"
    urban_image = open("static/images/cinematic_music/cinema.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "üé¶ –ú—É–∑–∏–∫–∞ –¥–æ —Ñ—ñ–ª—å–º—ñ–≤", url="https://audiojungle.net/collections/8574718-epic-cinematic-music"
        )
    )
    chat_bot.send_photo(message.chat.id, urban_image, caption=urban_text, parse_mode="html", reply_markup=markup)


@chat_bot.message_handler(
    func=lambda message: message.text in ["üéÖ Christmas Music", "Christmas Music", "christmas music", "Christmas",
                                          "christmas", "Xmas", "XMAS", "xmas"]
)
def christmas_music_page(message):
    christmas_text = "<b>This collection includes unique orchestral Christmas music composed, mixed and mastered" \
                 " by Ievgenii Balabanov. Presented compositions can be useful for proper acoustic design " \
                     "of your Christmas projects</b>"
    christmas_image = open("static/images/christmas_music/christmas.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "Christmas Music", url="https://audiojungle.net/collections/8574751-christmas-music"
        )
    )
    chat_bot.send_photo(
        message.chat.id, christmas_image, caption=christmas_text, parse_mode="html", reply_markup=markup
    )

    time.sleep(2)
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "Sure, why not?", callback_data="Sure, why not?"
        ),
        types.InlineKeyboardButton(
            "No, I‚Äôm not interested", callback_data="No, I‚Äôm not interested"
        )
    )
    chat_bot.send_message(message.chat.id, "Can I ask you something? üëÄ",
                          reply_markup=markup)


@chat_bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == "Sure, why not?":
        sticker = open("static/stickers/great.tgs", 'rb')
        chat_bot.send_sticker(callback.message.chat.id, sticker)
        markup = types.InlineKeyboardMarkup()
        markup.add(
            types.InlineKeyboardButton(
                "Carol of the Bells",
                url="https://audiojungle.net/item/carol-of-the-bells/25166035"
            ),
            types.InlineKeyboardButton(
                "Nah, maybe next time...", callback_data="Nah, maybe next time..."
            )
        )
        chat_bot.send_message(callback.message.chat.id, "Great. I‚Äôm glad to hear it! I see you‚Äôre looking for Christmas"
                                                        " music. Might you be interested in my favorite song?",
                              reply_markup=markup)

    elif callback.data == "No, I‚Äôm not interested":
        chat_bot.send_message(callback.message.chat.id, "Sorry about that!")

    elif callback.data == "Nah, maybe next time...":
        sticker = open("static/stickers/no_problem.tgs", 'rb')
        chat_bot.send_sticker(callback.message.chat.id, sticker)
        chat_bot.send_message(callback.message.chat.id, "It's a pity, but no problems")


@chat_bot.message_handler(
    func=lambda message: message.text in ["üéÖ –†—ñ–∑–¥–≤—è–Ω–∞ –º—É–∑–∏–∫–∞", "–†—ñ–∑–¥–≤—è–Ω–∞ –º—É–∑—ã–∫–∞", "—Ä—ñ–∑–¥–≤—è–Ω–∞ –º—É–∑–∏–∫–∞", "–†—ñ–∑–¥–≤—è–Ω–∞",
                                          "—Ä—ñ–∑–¥–≤—è–Ω–∞", "–†—ñ–∑–¥–≤–æ", "—Ä—ñ–∑–¥–≤–æ"]
)
def christmas_music_page(message):
    christmas_text = "<b>–î–∞–Ω–∞ –∫–æ–ª–µ–∫—Ü—ñ—è –º—ñ—Å—Ç–∏—Ç—å –∞–≤—Ç–æ—Ä—Å—å–∫—ñ —Ä—ñ–∑–¥–≤—è–Ω—ñ –æ—Ä–∫–µ—Å—Ç—Ä–æ–≤—ñ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—ó, —â–æ —Å—Ç–≤–æ—Ä–µ–Ω—ñ, –∞—Ä–∞–Ω–∂–æ–≤–∞–Ω—ñ —Ç–∞ " \
                     "–∑–≤–µ–¥–µ–Ω—ñ –Ñ–≤–≥–µ–Ω—ñ—î–º –ë–∞–ª–∞–±–∞–Ω–æ–≤–∏–º. –ù–∞–≤–µ–¥–µ–Ω—ñ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—ó —Å—Ç–∞–Ω—É—Ç—å —è—Å–∫—Ä–∞–≤–∏–º –¥–æ–ø–æ–≤–Ω–µ–Ω–Ω—è–º –≤–∞—à–∏—Ö —Å–≤—è—Ç–∫–æ–≤–∏—Ö" \
                     "–ø—Ä–æ—î–∫—Ç—ñ–≤</b>"
    christmas_image = open("static/images/christmas_music/christmas.png", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "üéÖ –†—ñ–∑–¥–≤—è–Ω–∞ –º—É–∑–∏–∫–∞", url="https://audiojungle.net/collections/8574751-christmas-music"
        )
    )
    chat_bot.send_photo(
        message.chat.id, christmas_image, caption=christmas_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["¬©Ô∏è Logos", "Logos", "logos", "Logo", "logo"]
)
def logo_page(message):
    logo_text = "<b>This collection includes unique mainly orchestral Logos composed, mixed and mastered " \
                "by Ievgenii Balabanov. Presented logos can be useful for proper acoustic design of your " \
                "social media accounts, or any kinds of your media projects.</b>"
    logo_image = open("static/images/logos/logo.jpeg", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "¬©Ô∏è Logos", url="https://audiojungle.net/collections/11369762-logos-idents"
        )
    )
    chat_bot.send_photo(
        message.chat.id, logo_image, caption=logo_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["¬©Ô∏è–õ–æ–≥–æ—Ç–∏–ø–∏", "–ª–æ–≥–æ", "–õ–æ–≥–æ", "–õ–æ–≥–æ—Ç–∏–ø–∏", "–ª–æ–≥–æ—Ç–∏–ø–∏", "–ª–æ–≥–æ—Ç–∏–ø", "–õ–æ–≥–æ—Ç–∏–ø"]
)
def logo_page(message):
    logo_text = "<b>–î–∞–Ω–∞ –∫–æ–ª–µ–∫—Ü—ñ—è –º—ñ—Å—Ç–∏—Ç—å –∞–≤—Ç–æ—Ä—Å—å–∫—ñ, –ø–µ—Ä–µ–≤–∞–∂–Ω–æ –æ—Ä–∫–µ—Å—Ç—Ä–æ–≤—ñ –ª–æ–≥–æ—Ç–∏–ø–∏, —â–æ —Å—Ç–≤–æ—Ä–µ–Ω—ñ, –∞—Ä–∞–Ω–∂–æ–≤–∞–Ω—ñ —Ç–∞ " \
                     "–∑–≤–µ–¥–µ–Ω—ñ –Ñ–≤–≥–µ–Ω—ñ—î–º –ë–∞–ª–∞–±–∞–Ω–æ–≤–∏–º. –î–∞–Ω—ñ –ª–æ–≥–æ —Å—Ç–∞–Ω—É—Ç—å —Å–ø—Ä–∞–≤–∂–Ω—å–æ—é –ø—Ä–∏–∫—Ä–∞—Å–æ—é —Ç–∞ –≤—ñ–∑–∏—Ç–Ω–æ—é –∫–∞—Ä—Ç–∫–æ—é –≤–∞—à–∏—Ö " \
                "—Å–æ—Ü—ñ–∞–ª—å–Ω–∏—Ö –º–µ—Ä–µ–∂ –∞–±–æ –∞–∫–∞—É–Ω—Ç—ñ–≤</b>"
    logo_image = open("static/images/logos/logo.jpeg", "rb")
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "¬©Ô∏è–õ–æ–≥–æ—Ç–∏–ø–∏", url="https://audiojungle.net/collections/11369762-logos-idents"
        )
    )
    chat_bot.send_photo(
        message.chat.id, logo_image, caption=logo_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["View Whole Portfolio", "Portfolio", "portfolio", "View Portfolio", "items",
                                          "Items", "All Items", "all items", "All", "all"]
)
def portfolio_page(message):
    portfolio_text = "<b>Immerse yourself in the atmosphere of high-quality sound effects. On our portfolio page " \
                     "there are more than 1500 items, which will surely satisfy any of our customers</b>"
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "Portfolio", url="https://audiojungle.net/user/moonaudioproduction/portfolio"
        )
    )
    chat_bot.send_message(
        message.chat.id, portfolio_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ —Ü—ñ–ª–∫–æ–º", "–ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ", "–ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ"]
)
def portfolio_page(message):
    portfolio_text = "<b>–ó–∞–Ω—É—Ä—Ç–µ—Å—è —É –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –≤–∏—Å–æ–∫–æ—ó —è–∫–æ—Å—Ç—ñ –∑–≤—É–∫–æ–≤–∏—Ö –µ—Ñ–µ–∫—Ç—ñ–≤. –ù–∞—à–µ –ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ –≤–∫–ª—é—á–∞—î –ø–æ–Ω–∞–¥ 1500 " \
                     "—É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∞–π—Ç–µ–º—ñ–≤, —â–æ –∑–¥–∞—Ç–Ω—ñ –∑–∞–¥–æ–≤–æ–ª—å–Ω–∏—Ç–∏ –±—É–¥—å-—è–∫—ñ –ø–æ—Ç—Ä–µ–±–∏ –Ω–∞–≤—ñ—Ç—å –Ω–∞–π–≤–∏–±–∞–≥–ª–∏–≤—ñ—à–∏—Ö " \
                     "–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤</b>"
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "–ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ", url="https://audiojungle.net/user/moonaudioproduction/portfolio"
        )
    )
    chat_bot.send_message(
        message.chat.id, portfolio_text, parse_mode="html", reply_markup=markup
    )


@chat_bot.message_handler(
    func=lambda message: message.text in ["MoonAudioProduction YouTube chanel", "YouTube", "youtube", "chanel",
                                          "YouTube chanel", "youtube chanel"]
)
def youtube_chanel(message):
    youtube_text = "<b>Official YouTube chanel of MoonAudioProduction which is presents high quality sound " \
                   "materials, thanks to which you will be able to embody your creative projects!</b>"
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "MoonAudioProduction YouTube chanel", url="https://www.youtube.com/@moonaudioproduction784"
        )
    )
    chat_bot.reply_to(message, youtube_text, parse_mode="html", reply_markup=markup)


@chat_bot.message_handler(
    func=lambda message: message.text in ["MoonAudioProduction YouTube –∫–∞–Ω–∞–ª", "–Æ—Ç—å—é–±", "–Æ—Ç—É–±", "—é—Ç—å—é–±", "—é—Ç—É–±"]
)
def youtube_chanel(message):
    youtube_text = "<b>–û—Ñ—ñ—Ü—ñ–π–Ω–∏–π YouTube –∫–∞–Ω–∞–ª MoonAudioProduction —â–æ –º—ñ—Å—Ç–∏—Ç—å –∑—Ä–∞–∑–∫–∏ –≤–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω–∏—Ö –∑–≤—É–∫–æ–≤–∏—Ö " \
                   "–µ—Ñ–µ–∫—Ç—ñ–≤!</b>"
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            "MoonAudioProduction YouTube –∫–∞–Ω–∞–ª", url="https://www.youtube.com/@moonaudioproduction784"
        )
    )
    chat_bot.reply_to(message, youtube_text, parse_mode="html", reply_markup=markup)


@chat_bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == "delete":
        chat_bot.delete_message(callback.message.chat.id, callback.message.message_id - 1)


@chat_bot.message_handler(content_types=["text"])
def get_user_message(message):
    if message.text == "üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø Continue in English":
        markup = types.ReplyKeyboardMarkup()
        button_1 = types.KeyboardButton("üìïüëÄ Quick navigate guide")
        button_2 = types.KeyboardButton("ü§î What is MoonAudioProduction?")
        button_3 = types.KeyboardButton("üíº View Our Portfolio")
        button_4 = types.KeyboardButton("üìù Complete phrase list")
        markup.row(button_1, button_2, button_3)
        markup.row(button_4)
        greeting_message = f"Hello, <b>{message.from_user.first_name} {message.from_user.last_name}</b>. " \
                           f"MoonAudioProduction bot is glad to welcome you! " \
                           f"Our custom sound effects and music make your projects more colorful!"
        chat_bot.send_message(message.chat.id, greeting_message, parse_mode="html", reply_markup=markup)
        file = open("static/images/home_moon.png", "rb")
        chat_bot.send_photo(message.chat.id, file, reply_markup=markup)
        second_message = "How can I help You?"
        chat_bot.send_message(message.chat.id, second_message, parse_mode="html")

    elif message.text == "Û†ÅßÛ†Å¢Û†Å•Û†ÅÆüá∫üá¶Û†Åø –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é":
        markup = types.ReplyKeyboardMarkup()
        ua_button_1 = types.KeyboardButton("üìïüëÄ –ö–æ—Ä–æ—Ç–∫–∏–π –ø–æ—Å—ñ–±–Ω–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
        ua_button_2 = types.KeyboardButton("ü§î –©–æ —Ç–∞–∫–µ MoonAudioProduction?")
        ua_button_3 = types.KeyboardButton("üíº –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ")
        ua_button_4 = types.KeyboardButton("üìù –ü–æ–≤–Ω–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é")
        markup.row(ua_button_1, ua_button_2, ua_button_3)
        markup.row(ua_button_4)
        greeting_message = f"–ü—Ä–∏–≤—ñ—Ç, <b>{message.from_user.first_name} {message.from_user.last_name}</b>. " \
                           f"MoonAudioProduction —á–∞—Ç-–±–æ—Ç —Ä–∞–¥–∏–π –≤—ñ—Ç–∞—Ç–∏ —Ç–µ–±–µ! " \
                           f"–ù–∞—à—ñ –∞–≤—Ç–æ—Ä—Å—å–∫—ñ –∑–≤—É–∫–æ–≤—ñ –µ—Ñ–µ–∫—Ç–∏ —Ç–∞ –æ—Ä–∫–µ—Å—Ç—Ä–æ–≤–∞ –º—É–∑–∏–∫–∞ –∑–∞–±–µ–∑–ø–µ—á–∞—Ç—å —è–∫—ñ—Å–Ω–æ –Ω–∞–ª–µ–∂–Ω–µ –∞–∫—É—Å—Ç–∏—á–Ω–µ " \
                           f"–æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –í–∞—à–æ–≥–æ –ø—Ä–æ—î–∫—Ç—É —â–æ –≤–∏–≥—ñ–¥–Ω–æ –≤–∏—Ä—ñ–∑–Ω—è—Ç–∏–º–µ –π–æ–≥–æ –∑-–ø–æ–º—ñ–∂ —ñ–Ω—à–∏—Ö!"
        chat_bot.send_message(message.chat.id, greeting_message, parse_mode="html", reply_markup=markup)
        file = open("static/images/home_moon.png", "rb")
        chat_bot.send_photo(message.chat.id, file, reply_markup=markup)
        second_message = "–ß–∏–º —è –º–æ–∂—É –í–∞–º –¥–æ–ø–æ–º–æ–≥—Ç–∏?"
        chat_bot.send_message(message.chat.id, second_message, parse_mode="html")

    elif message.text == "ü§î What is MoonAudioProduction?":
        sticker = open('static/stickers/moon.webp', 'rb')
        chat_bot.send_sticker(message.chat.id, sticker)
        chat_bot.reply_to(message, f"<b>Dear {message.from_user.first_name} {message.from_user.last_name}</b> \n"
                                   "We are so excited to welcome you on our MoonAudioProduction workshop! \n"
                                   "Our creativity unites several directions at once: <b>Sound-design</b> "
                                   "and high quality <b>Cinematic music</b> as well as beautiful "
                                   "<b>Christmas Music</b> "
                                   "that creates a unique atmosphere of a family holiday. \n"
                                   "We invite you to familiarize yourself with our portfolio, in which we are sure, "
                                   "You will find what you need to realize your creative projects!!!!",
                          parse_mode="html")

    elif message.text == "ü§î –©–æ —Ç–∞–∫–µ MoonAudioProduction?":
        sticker = open('static/stickers/moon.webp', 'rb')
        chat_bot.send_sticker(message.chat.id, sticker)
        chat_bot.reply_to(message, f"<b>–®–∞–Ω–æ–≤–Ω–∏–π(–∞) {message.from_user.first_name} {message.from_user.last_name}</b> \n"
                                   "–ú–∏ –Ω–∞–¥–∑–≤–∏—á–∞–π–Ω–æ —Ä–∞–¥—ñ –≤—ñ—Ç–∞—Ç–∏ –í–∞—Å —É –Ω–∞—à—ñ–π –∑–≤—É–∫–æ–≤—ñ–π –º–∞–π—Å—Ç–µ—Ä–Ω—ñ MoonAudioProduction! \n"
                                   "–ù–∞—à–∞ —Ç–≤–æ—Ä—á—ñ—Å—Ç—å –ø–æ—î–¥–Ω—É—î –≤ —Å–æ–±—ñ –≤—ñ–¥—Ä–∞–∑—É –¥–µ–∫—ñ–ª—å–∫–∞ —Å–ø—Ä—è–º—É–≤–∞–Ω—å: <b>–ó–≤—É–∫–æ–≤–∏–π –¥–∏–∑–∞–π–Ω</b> "
                                   "–∞ —Ç–∞–∫–æ–∂ –≤–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω—É <b>–û—Ä–∫–µ—Å—Ç—Ä–æ–≤—É –º—É–∑–∏–∫—É</b>, –∑–æ–∫—Ä–µ–º–∞ <b>–ú—É–∑–∏–∫—É –¥–æ –∫—ñ–Ω–æ—Ñ—ñ–ª—å–º—ñ–≤</b>"
                                   " –∞ —Ç–∞–∫–æ–∂ –≤–∏—Ç–æ–Ω—á–µ–Ω—É <b>–†—ñ–∑–¥–≤—è–Ω—É –º—É–∑–∏–∫—É</b>, —â–æ —Å—Ç–≤–æ—Ä—é—î –Ω–µ–ø–µ—Ä–µ–≤–µ—Ä—à–µ–Ω—É –∞—Ç–º–æ—Å—Ñ–µ—Ä—É "
                                   "—Å—ñ–º–µ–π–Ω–æ–≥–æ —Å–≤—è—Ç–∞.\n"
                                   "–ó–∞–ø—Ä–æ—à—É—î–º–æ –í–∞—Å –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ –Ω–∞—à–∏–º –ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ, –≤ —Ä–∞–º–∫–∞—Ö —è–∫–æ–≥–æ, –º–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, "
                                   "–í–∏ —Ç–æ—á–Ω–æ –∑–Ω–∞–π–¥–µ—Ç–µ –¥–ª—è —Å–µ–±–µ —â–æ—Å—å —Ü—ñ–∫–∞–≤–µ–Ω—å–∫–µ!!",
                          parse_mode="html")

    elif message.text in ["üíº View Our Portfolio", "‚¨ÖÔ∏è Back to Category selection"]:
        markup = types.ReplyKeyboardMarkup()
        sound_effects = types.KeyboardButton("üîâ Sound Effects")
        cinematic_music = types.KeyboardButton("üé¶ Cinematic Music")
        christmas_music = types.KeyboardButton("üéÖ Christmas Music")
        logos = types.KeyboardButton("¬©Ô∏è Logos")
        all_items = types.KeyboardButton("View Whole Portfolio")
        back = types.KeyboardButton("‚Ü©Ô∏è Back to Main menu")
        markup.add(sound_effects, cinematic_music, christmas_music, logos, all_items, back)
        chat_bot.send_message(message.chat.id, text="Please select desired category ‚§µÔ∏è", reply_markup=markup)

    elif message.text in ["üíº –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ", "‚¨ÖÔ∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤–∏–±–æ—Ä—É –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó"]:
        markup = types.ReplyKeyboardMarkup()
        sound_effects = types.KeyboardButton("üîâ –ó–≤—É–∫–æ–≤—ñ –µ—Ñ–µ–∫—Ç–∏")
        cinematic_music = types.KeyboardButton("üé¶ –ú—É–∑–∏–∫–∞ –¥–æ —Ñ—ñ–ª—å–º—ñ–≤")
        christmas_music = types.KeyboardButton("üéÖ –†—ñ–∑–¥–≤—è–Ω–∞ –º—É–∑–∏–∫–∞")
        logos = types.KeyboardButton("¬©Ô∏è–õ–æ–≥–æ—Ç–∏–ø–∏")
        all_items = types.KeyboardButton("–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ —Ü—ñ–ª–∫–æ–º")
        back = types.KeyboardButton("‚Ü©Ô∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é")
        markup.add(sound_effects, cinematic_music, christmas_music, logos, all_items, back)
        chat_bot.send_message(message.chat.id, text="–ë—É–¥—å-–ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é ‚§µÔ∏è", reply_markup=markup)

    elif message.text in [
        "üîâ Sound Effects", "Sound Effects", "sound effects", "sounds", "sound", "effects", "effect", "sfx", "SFX",
        "Foley", "foley", "Foley Sound", "foley sound", "Foley sound", "Foley Sounds", "foley sounds"
    ]:
        markup = types.ReplyKeyboardMarkup(row_width=4)
        cartoon = types.KeyboardButton("Cartoon Sounds")
        domestic = types.KeyboardButton("Domestic Sounds")
        futuristic = types.KeyboardButton("Futuristic Sounds")
        game = types.KeyboardButton("Game Sounds")
        human = types.KeyboardButton("Human Sounds")
        industrial = types.KeyboardButton("Industrial Sounds")
        interface = types.KeyboardButton("Interface Sounds")
        nature = types.KeyboardButton("Nature Sounds")
        whooshes = types.KeyboardButton("Transitions & Movement")
        urban = types.KeyboardButton("Urban Sounds")
        back_to_category = types.KeyboardButton("‚¨ÖÔ∏è Back to Category selection")
        back_home = types.KeyboardButton("‚Ü©Ô∏è Back to Main menu")
        markup.add(cartoon, domestic, futuristic, game, human, industrial, interface, nature, whooshes, urban,
                   back_to_category, back_home)
        chat_bot.send_message(message.chat.id, text="Please specify the appropriate subcategory‚§µÔ∏è", reply_markup=markup)

    elif message.text in ["üîâ –ó–≤—É–∫–æ–≤—ñ –µ—Ñ–µ–∫—Ç–∏", "–ó–≤—É–∫–æ–≤—ñ –ï—Ñ–µ–∫—Ç–∏", "–ó–≤—É–∫–æ–≤—ñ –µ—Ñ–µ–∫—Ç–∏", "–∑–≤—É–∫–æ–≤—ñ –µ—Ñ–µ–∫—Ç–∏", "–∑–≤—É–∫–∏", "–∑–≤—É–∫",
                          "–µ—Ñ–µ–∫—Ç–∏", "–µ—Ñ–µ–∫—Ç"]:
        markup = types.ReplyKeyboardMarkup(row_width=4)
        cartoon = types.KeyboardButton("–ó–≤—É–∫–∏ –¥–æ –ú—É–ª—å—Ç—Ñ—ñ–ª—å–º—ñ–≤")
        domestic = types.KeyboardButton("–ü–æ–±—É—Ç–æ–≤—ñ –ó–≤—É–∫–∏")
        futuristic = types.KeyboardButton("–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–Ω—ñ –∑–≤—É–∫–∏")
        game = types.KeyboardButton("–Ü–≥—Ä–æ–≤—ñ –∑–≤—É–∫–∏")
        human = types.KeyboardButton("–õ—é–¥—Å—å–∫—ñ –∑–≤—É–∫–∏")
        industrial = types.KeyboardButton("–ü—Ä–æ–º–∏—Å–ª–æ–≤—ñ –ó–≤—É–∫–∏")
        interface = types.KeyboardButton("–ó–≤—É–∫–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É")
        nature = types.KeyboardButton("–ü—Ä–∏—Ä–æ–¥–Ω—ñ –∑–≤—É–∫–∏")
        whooshes = types.KeyboardButton("–¢—Ä–∞–Ω–∑—ñ—à–Ω—Å")
        urban = types.KeyboardButton("–ó–≤—É–∫–∏ –º—ñ—Å—Ç–∞")
        back_to_category = types.KeyboardButton("‚¨ÖÔ∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤–∏–±–æ—Ä—É –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó")
        back_home = types.KeyboardButton("‚Ü©Ô∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é")
        markup.add(cartoon, domestic, futuristic, game, human, industrial, interface, nature, whooshes, urban,
                   back_to_category, back_home)
        chat_bot.send_message(message.chat.id, text="–ë—É–¥—å-–ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω—É –ø—ñ–¥–∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∑–≤—É–∫–æ–≤–∏—Ö –µ—Ñ–µ–∫—Ç—ñ–≤‚§µÔ∏è",
                              reply_markup=markup)

    elif message.text in ["‚Ü©Ô∏è Back to Main menu", "Menu", "menu", "Back to menu", "back to menu"]:
        markup = types.ReplyKeyboardMarkup()
        button1 = types.KeyboardButton("üìïüëÄ Quick navigate guide")
        button2 = types.KeyboardButton("ü§î What is MoonAudioProduction?")
        button3 = types.KeyboardButton("üíº View Our Portfolio")
        button4 = types.KeyboardButton("üìù Complete phrase list")
        markup.add(button1, button2, button3, button4)
        chat_bot.send_message(message.chat.id, text="You have successfully redirected to the main menu",
                              reply_markup=markup)

    elif message.text in ["‚Ü©Ô∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é", "–ú–µ–Ω—é", "–º–µ–Ω—é", "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é",
                          "–ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é", "–¥–æ –º–µ–Ω—é", "–≤ –º–µ–Ω—é"]:
        markup = types.ReplyKeyboardMarkup()
        ua_button_1 = types.KeyboardButton("üìïüëÄ –ö–æ—Ä–æ—Ç–∫–∏–π –ø–æ—Å—ñ–±–Ω–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
        ua_button_2 = types.KeyboardButton("ü§î –©–æ —Ç–∞–∫–µ MoonAudioProduction?")
        ua_button_3 = types.KeyboardButton("üíº –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ")
        ua_button_4 = types.KeyboardButton("üìù –ü–æ–≤–Ω–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é")
        markup.row(ua_button_1, ua_button_2, ua_button_3)
        markup.row(ua_button_4)
        chat_bot.send_message(message.chat.id, text="–í–∏ —É—Å–ø—ñ—à–Ω–æ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é",
                              reply_markup=markup)

    elif message.text in ["Hello", "hello", "hi", "Hi"]:
        sticker = open('static/stickers/Home.tgs', 'rb')
        chat_bot.send_sticker(message.chat.id, sticker)
        chat_bot.reply_to(message, "Hi there! üëã", parse_mode="html")

    elif message.text in ["–ü—Ä–∏–≤—ñ—Ç", "–ø—Ä–∏–≤—ñ—Ç", "–∑–¥–æ—Ä–æ–≤"]:
        sticker = open('static/stickers/Home.tgs', 'rb')
        chat_bot.send_sticker(message.chat.id, sticker)
        chat_bot.reply_to(message, "–í—ñ—Ç–∞—é! üëã", parse_mode="html")

    elif message.text in [
        "üìû Contact the Author", "contact author", "Contact", "contact", "author", "Author", "–ê–≤—Ç–æ—Ä", "–∞–≤—Ç–æ—Ä",
        "Contact Author"
    ]:
        chat_bot.reply_to(message, "Full Name: Ievgenii Balabanov;\nemail: moonaudioproduction@gmail.com;\n"
                                   "Phone Number: +380938208494", parse_mode="html")

    elif message.text in ["üìû –ó–≤ º—è–∑–æ–∫ –∑ –∞–≤—Ç–æ—Ä–æ–º", "–ó–≤ º—è–∑–æ–∫ –∑ –∞–≤—Ç–æ—Ä–æ–º", "–ó–≤ º—è–∑–æ–∫", "–∑–≤ º—è–∑–æ–∫", "–∞–≤—Ç–æ—Ä", "–ê–≤—Ç–æ—Ä"]:
        chat_bot.reply_to(message, "–ü—Ä—ñ–∑–≤–∏—â–µ —Ç–∞ –Ü–º º—è: Balabanov Ievgenii;"
                                   "\n–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞: moonaudioproduction@gmail.com;\n"
                                   "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: +380938208494", parse_mode="html")

    elif message.text in ["id", "ID", "Id", "iD", "–∞–π–¥—ñ", "–ê–π–¥—ñ"]:
        chat_bot.reply_to(message, f"Your ID: {message.from_user.id}", parse_mode="html")

    elif message.text in ["name", "full name", "Get my full name"]:
        chat_bot.reply_to(message, f"Your full name: <b>{message.from_user.first_name} {message.from_user.last_name}"
                                   f"</b>", parse_mode="html")

    elif message.text in ["How are You?", "how are you", "How are you", "how are You", "how are you?"]:
        chat_bot.reply_to(message, "Thanks, I'm good!", parse_mode="html")

    elif message.text in ["—è–∫ —Å–ø—Ä–∞–≤–∏?", "—è–∫ —Å–ø—Ä–∞–≤–∏", "–Ø–∫ —Å–ø—Ä–∞–≤–∏?", "–Ø–∫ —Å–ø—Ä–∞–≤–∏"]:
        chat_bot.reply_to(message, "–î—è–∫—É—é, –≤—Å–µ —Å—É–ø–µ—Ä! –°–ø–æ–¥—ñ–≤–∞—é—Å—å, —â–æ —É —Ç–µ–±–µ —Ç–∞–∫–æ–∂))", parse_mode="html")

    elif message.text == "üìïüëÄ Quick navigate guide":
        chat_bot.reply_to(message, "For each user MoonAudioProduction bot gave the opportunity to <b>write me some "
                                   "messages, send me images, GIFs, or video files</b>. \nIn your message, for example,"
                                   " You can try to type something like this:"
                                   "\n- <b>ID</b> (also as 'id', 'Id', 'iD')\n- <b>Hello</b> "
                                   "(e.g. than 'Hello', 'hello', 'hi', 'Hi')"
                                   "\n- <b>How are you?</b> "
                                   "(e.g 'How are You?', 'how are you', 'How are you', 'how are You',  "
                                   "'how are you?')\n"
                                   "\nYou can also checkout the menu button to view the provided <b>commands</b>, or"
                                   " you can write them manually. Here are some existing commands:\n- <b>/start</b> - "
                                   "to restart communication with MoonAudioProduction Bot;\n- <b>/index_en</b> - back"
                                   " to main menu;\n- <b>/info_en</b> - to "
                                   "display author contact details;\n\n<b>P.S. - You can just click on those "
                                   "commands)</b>",
                          parse_mode="html")

    elif message.text == "üìïüëÄ –ö–æ—Ä–æ—Ç–∫–∏–π –ø–æ—Å—ñ–±–Ω–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞":
        chat_bot.reply_to(message, "MoonAudioProduction –±–æ—Ç –Ω–∞–¥–∞—î –∫–æ–∂–Ω–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å <b>–Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ "
                                   "—Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, GIF-–∞–Ω—ñ–º–∞—Ü—ñ—é, —Å—Ç—ñ–∫–µ—Ä —Ç–∞ –≤—ñ–¥–µ–æ—Ñ–∞–π–ª</b>. "
                                   "\n–£ –≤–∞—à–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ, –¥–æ –ø—Ä–∏–∫–ª–∞–¥—É,"
                                   " –í–∏ –º–æ–∂–µ—Ç–µ –Ω–∞–¥—Ä—É–∫—É–≤–∞—Ç–∏ —â–æ—Å—å –Ω–∞ –∫—à—Ç–∞–ª—Ç:"
                                   "\n- <b>ID</b> (—Ç–∞–∫–æ–∂ 'id', 'Id', 'iD', '–∞–π–¥—ñ', '–ê–π–¥—ñ')\n- <b>–ü—Ä–∏–≤—ñ—Ç</b> "
                                   "(—É —Ç–æ–º—É —á–∏—Å–ª—ñ '–ø—Ä–∏–≤—ñ—Ç', '–∑–¥–æ—Ä–æ–≤')\n- <b>–Ø–∫ —Å–ø—Ä–∞–≤–∏?</b> (–∞–±–æ '—è–∫ —Å–ø—Ä–∞–≤–∏?', "
                                   "'—è–∫ —Å–ø—Ä–∞–≤–∏', '–Ø–∫ —Å–ø—Ä–∞–≤–∏')\n\n–í–∏ —Ç–∞–∫–æ–∂ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–Ω–æ–ø–∫—É –ú–µ–Ω—é —â–æ –º—ñ—Å—Ç–∏—Ç—å "
                                   "–¥–æ—Å—Ç—É–ø–Ω—ñ <b>–∫–æ–º–∞–Ω–¥–∏</b>, –∞–±–æ –∂ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç–∏ —ó—Ö –≤–ª–∞—Å–Ω–æ—Ä—É—á. –û—Å—å –¥–µ–∫—ñ–ª—å–∫–∞ –∫–ª—é—á–æ–≤–∏—Ö "
                                   "–∫–æ–º–∞–Ω–¥:\n- <b>/start</b> - –∑–∞–Ω–æ–≤–æ –ø–æ—á–∞—Ç–∏ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ –±–æ—Ç–æ–º MoonAudioProduction;"
                                   "\n- <b>/index_ua</b> - –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î —Å—Ç–æ—Ä—ã–Ω–∫—É –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é; \n- <b>/info_ua</b> - "
                                   "–≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –∫–æ–Ω—Ç–∞–∫—Ç–∏ –∞–≤—Ç–æ—Ä–∞;\n\n<b>–ü.–°. - –Ø–∫—â–æ –Ω–µ —Ö–æ—á–µ—à –ø–∏—Å–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É - –º–æ–∂–µ—à "
                                   "–ø—Ä–æ—Å—Ç–æ –∂–º–∞–∫–∞—Ç–∏ –Ω–∞ –Ω–µ—ó üòú</b>",
                          parse_mode="html")

    elif message.text == "üìù Complete phrase list":
        chat_bot.send_message(message.chat.id, "<b><u>Available phrases:</u></b>\n- <b>ID</b> (also as 'id', 'Id', "
                                               "'iD')\n- <b>Hello</b> (e.g. than 'Hello', 'hello', 'hi', 'Hi')"
                                               "\n- <b>How are you?</b> (e.g 'How are You?', 'how are you', "
                                               "'How are you', 'how are You', 'how are you?')\n- <b>Portfolio</b> "
                                               "(e.g. 'View Whole Portfolio', 'portfolio', 'View Portfolio', 'items', "
                                               "'Items', 'All Items', 'all items')\n- <b>YouTube</b> (e.g. 'youtube', "
                                               "'chanel', 'YouTube chanel', 'youtube chanel')\n- <b>Menu</b> "
                                               "(e.g. 'menu', 'Back to menu', 'back to menu')"
                                               "\n\n<b><u>Portfolio Categories:</u></b>\n- <b>Sound Effects</b> (e.g "
                                               "'sound effects', 'sounds', 'sound', 'effects', 'effect', 'sfx', 'SFX', "
                                               "'Foley', 'foley', 'Foley Sound', 'foley sound', 'Foley sound', "
                                               "'Foley Sounds', 'foley sounds')\n\n- "
                                               "<b>Cinematic Music</b> (e.g. 'Cinematic music', 'cinematic music', "
                                               "'cinematic', 'Cinematic', 'Cinema', 'cinema', 'Cine', 'cine', 'Film', "
                                               "'film', 'Movie', 'movie', 'Movies', 'movies')"
                                               "\n\n- <b>Christmas Music</b> (e.g. 'christmas music', 'Christmas', "
                                               "'christmas', 'Xmas', 'XMAS', 'xmas')\n\n- <b>Logos</b> "
                                               "(e.g. 'logos', 'Logo', 'logo')"
                                               "\n\n<b><u>Categories of Sound Effects:</u></b>"
                                               "\n- <b>Cartoon Sounds</b> (e.g. 'Cartoon Sound', 'Cartoon sounds', "
                                               "'Cartoon sound', 'Cartoon', 'cartoon')\n\n- <b>Domestic Sounds</b> "
                                               "(e.g. 'Domestic Sounds', 'Domestic sounds', 'Domestic Sound', "
                                               "'Domestic sound', 'Domestic', 'domestic', 'Household', 'household')\n\n"
                                               "- <b>Futuristic Sounds</b> (e.g. 'Futuristic Sound', "
                                               "'Futuristic sounds', 'Futuristic sound', 'Futuristic', 'futuristic', "
                                               "'Sci-Fi Sounds', 'Sci-Fi sounds', 'Sci-Fi', 'Sci-fi', 'sci-fi', "
                                               "'Scifi')\n\n- <b>Game Sounds</b> (e.g. "
                                               "'Game sounds', 'Game Sound', 'Game sound', 'Game', 'game')\n\n- "
                                               "<b>Human Sounds</b> (e.g. 'Human sounds', 'human sounds', 'Human Sound'"
                                               ", 'Human', 'human', 'Human sound', 'Baby', 'baby', 'Babies', 'babies')"
                                               "\n\n- <b>Industrial Sounds</b> (e.g. "
                                               "'Industrial sounds', 'Industrial Sound', 'Industrial sound', "
                                               "'industrial sounds', 'industrial sound', 'Industrial', 'industrial',"
                                               "'Industry', 'industry')\n\n- <b>Interface Sounds</b> "
                                               "(e.g. 'Interface sounds', 'Interface Sound', 'Interface sound', "
                                               "'interface sounds', 'interface sound', 'Interface', 'interface', 'UI', "
                                               "'ui')\n\n- <b>Nature Sounds</b> (e.g. 'Nature sounds', 'Nature Sound', "
                                               "'nature sounds', 'nature sound', 'Nature', 'nature')"
                                               "\n\n- <b>Transitions & Movement</b> (e.g. 'Transitions & movement', "
                                               "'transitions & movement', 'transitions', 'transition', 'whoosh', "
                                               "'Whoosh', 'whooshes', 'Whooshes')\n\n- <b>Urban Sounds</b> (e.g. "
                                               "'Urban sounds', 'urban sounds', 'Urban', 'urban', 'City', 'city')"
                                               "\n\nYou can also checkout the menu button to view the "
                                               "provided <b>commands</b>, or you can write them manually. Here are some"
                                               " existing commands:\n- <b>/start</b> - to restart communication with "
                                               "MoonAudioProduction Bot;\n- <b>/index_en</b> - back to main menu;\n- "
                                               "<b>/info_en</b> - to display author contact details;"
                                               "\n\n<b>P.S. - You can just click on those commands)</b>",
                              parse_mode="html")

    elif message.text == "üìù –ü–æ–≤–Ω–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é":
        chat_bot.send_message(message.chat.id, "<b><u>–î–æ—Å—Ç—É–ø–Ω—ñ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –±–æ—Ç–æ–º —Ä–µ–ø–ª—ñ–∫–∏:</u></b>\n- "
                                               "<b>ID</b> (—Ç–∞–∫–æ–∂ 'id', 'Id', 'iD')\n- <b>–ü—Ä–∏–≤—ñ—Ç</b> (—Ç–∞–∫–æ–∂ '–ø—Ä–∏–≤—ñ—Ç',"
                                               "'–∑–¥–æ—Ä–æ–≤')\n- <b>–Ø–∫ —Å–ø—Ä–∞–≤–∏?</b> (e.g ''—è–∫ —Å–ø—Ä–∞–≤–∏?', '—è–∫ —Å–ø—Ä–∞–≤–∏', "
                                               "'–Ø–∫ —Å–ø—Ä–∞–≤–∏')\n- <b>–ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ</b> (e.g. '–ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ')\n- "
                                               "<b>–Æ—Ç—É–±</b> (e.g. '–Æ—Ç—å—é–±', '—é—Ç—å—é–±', '—é—Ç—É–±')\n- <b>–ú–µ–Ω—é</b> "
                                               "(e.g. '–ú–µ–Ω—é', '–º–µ–Ω—é', '–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é', '–ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é', "
                                               "'–¥–æ –º–µ–Ω—é', '–≤ –º–µ–Ω—é')\n\n<b><u>–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ:</u></b>\n- "
                                               "<b>–ó–≤—É–∫–æ–≤—ñ –µ—Ñ–µ–∫—Ç–∏</b> (e.g '–ó–≤—É–∫–æ–≤—ñ –ï—Ñ–µ–∫—Ç–∏', '–∑–≤—É–∫–æ–≤—ñ –µ—Ñ–µ–∫—Ç–∏', '–∑–≤—É–∫–∏',"
                                               " '–∑–≤—É–∫', '–µ—Ñ–µ–∫—Ç–∏', '–µ—Ñ–µ–∫—Ç')\n\n- <b>–ú—É–∑–∏–∫–∞ –¥–æ —Ñ—ñ–ª—å–º—ñ–≤</b> (e.g. '–∫—ñ–Ω–æ',"
                                               " '–¥–æ —Ñ–∏–ª—å–º—ñ–≤', '–¥–æ –∫—ñ–Ω–æ', '–§—ñ–ª—å–º', '—Ñ—ñ–ª—å–º', '–§—ñ–ª—å–º–∏', '—Ñ—ñ–ª—å–º–∏', "
                                               "'–ö—ñ–Ω–æ—Ñ—ñ–ª—å–º', '–∫—ñ–Ω–æ—Ñ—ñ–ª—å–º', '–º—É–∑–∏–∫–∞ –¥–æ —Ñ—ñ–ª—å–º—ñ–≤')\n\n- "
                                               "<b>–†—ñ–∑–¥–≤—è–Ω–∞ –º—É–∑–∏–∫–∞</b> (e.g. '—Ä—ñ–∑–¥–≤—è–Ω–∞ –º—É–∑–∏–∫–∞', '–†—ñ–∑–¥–≤—è–Ω–∞', '—Ä—ñ–∑–¥–≤—è–Ω–∞',"
                                               " '–†—ñ–∑–¥–≤–æ', '—Ä—ñ–∑–¥–≤–æ')\n\n- <b>–õ–æ–≥–æ—Ç–∏–ø–∏</b> (e.g. '–ª–æ–≥–æ', '–õ–æ–≥–æ', "
                                               "'–õ–æ–≥–æ—Ç–∏–ø–∏', '–ª–æ–≥–æ—Ç–∏–ø–∏', '–ª–æ–≥–æ—Ç–∏–ø', '–õ–æ–≥–æ—Ç–∏–ø')\n\n<b><u>–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó "
                                               "–ó–≤—É–∫–æ–≤–∏—Ö –ï—Ñ–µ–∫—Ç—ñ–≤:</u></b>\n- <b>–ó–≤—É–∫–∏ –¥–æ –ú—É–ª—å—Ç—Ñ—ñ–ª—å–º—ñ–≤</b> (e.g. "
                                               "'–ú—É–ª—å—Ç—Ñ—ñ–ª—å–º–∏', '–º—É–ª—å—Ç—Ñ—ñ–ª—å–º–∏', '–º—É–ª—å—Ç—Ñ—ñ–ª—å–º', '–ú—É–ª—å—Ç–∏–∫', '–º—É–ª—å—Ç–∏–∫', "
                                               "'–ú—É–ª—å—Ç—è—à–Ω—ñ –∑–≤—É–∫–∏', '–º—É–ª—å—Ç—è—à–Ω—ñ –∑–≤—É–∫–∏', '–ú—É–ª—å—Ç—è—à–Ω—ñ', '–º—É–ª—å—Ç—è—à–Ω—ñ')"
                                               "\n\n- <b>–ü–æ–±—É—Ç–æ–≤—ñ –ó–≤—É–∫–∏</b> (e.g. '–ü–æ–±—É—Ç–æ–≤—ñ –∑–≤—É–∫–∏', '–ø–æ–±—É—Ç–æ–≤—ñ –∑–≤—É–∫–∏', "
                                               "'–ü–æ–±—É—Ç–æ–≤—ñ', '–ø–æ–±—É—Ç–æ–≤—ñ', '–ü–æ–±—É—Ç', '–ø–æ–±—É—Ç')\n\n - <b>–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–Ω—ñ –∑–≤—É–∫–∏"
                                               "</b> (e.g. '—Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–Ω—ñ –∑–≤—É–∫–∏', '–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–Ω—ñ', '—Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–Ω—ñ')\n\n- "
                                               "<b>–Ü–≥—Ä–æ–≤—ñ –∑–≤—É–∫–∏</b> (e.g. '—ñ–≥—Ä–æ–≤—ñ –∑–≤—É–∫–∏', '–Ü–≥—Ä–æ–≤—ñ', '—ñ–≥—Ä–æ–≤—ñ', '–ì—Ä–∞', "
                                               "'–≥—Ä–∞')\n\n- <b>–õ—é–¥—Å—å–∫—ñ –∑–≤—É–∫–∏</b> (e.g. '–ª—é–¥—Å—å–∫—ñ –∑–≤—É–∫–∏', '–õ—é–¥–∏–Ω–∞', "
                                               "'–ª—é–¥–∏–Ω–∞', '–õ—é–¥—Å—å–∫—ñ', '–ª—é–¥—Å—å–∫—ñ')\n\n- <b>–ü—Ä–æ–º–∏—Å–ª–æ–≤—ñ –ó–≤—É–∫–∏</b> (e.g. "
                                               "'–ü—Ä–æ–º–∏—Å–ª–æ–≤—ñ', '–ø—Ä–æ–º–∏—Å–ª–æ–≤—ñ', '–ø—Ä–æ–º–∏—Å–ª–æ–≤—ñ –∑–≤—É–∫–∏', '—ñ–Ω–¥—É—Å—Ç—Ä—ñ–∞–ª—å–Ω—ñ', "
                                               "'–Ü–Ω–¥—É—Å—Ç—Ä—ñ–∞–ª—å–Ω—ñ')\n\n"
                                               "- <b>–ó–≤—É–∫–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É</b> (e.g. '–∑–≤—É–∫–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É', '–Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å', "
                                               "'—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å', '—é–∞–π')\n\n- "
                                               "<b>–ü—Ä–∏—Ä–æ–¥–Ω—ñ –∑–≤—É–∫–∏</b> (e.g. '–ø—Ä–∏—Ä–æ–¥–Ω—ñ –∑–≤—É–∫–∏', '–ü—Ä–∏—Ä–æ–¥–∞', '–ø—Ä–∏—Ä–æ–¥–∞', "
                                               "'–ó–≤—É–∫–∏ –ø—Ä–∏—Ä–æ–¥–∏', '–∑–≤—É–∫–∏ –ø—Ä–∏—Ä–æ–¥–∏', '–ü—Ä–∏—Ä–æ–¥–Ω—ñ', '–ø—Ä–∏—Ä–æ–¥–Ω—ñ')\n\n- "
                                               "<b>–¢—Ä–∞–Ω–∑—ñ—à–Ω—Å</b> (e.g. '—Ç—Ä–∞–Ω–∑—ñ—à–Ω—Å', '—Ç—Ä–∞–Ω–∑—ñ—à–Ω', '—Ç—Ä–∞–Ω–∑—ñ—à–Ω', '–í—É—à', "
                                               "'–≤—É—à', '–í—É—à–∞–∫–∏', '–≤—É—à–∞–∫–∏')\n\n- <b>–ó–≤—É–∫–∏ –º—ñ—Å—Ç–∞</b> (e.g. '–∑–≤—É–∫–∏ –º—ñ—Å—Ç–∞',"
                                               " '–ú—ñ—Å—å–∫—ñ –∑–≤—É–∫–∏', '–º—ñ—Å—å–∫—ñ –∑–≤—É–∫–∏', '–£—Ä–±–∞–Ω', '—É—Ä–±–∞–Ω')"
                                               "\n\n–í–∏ —Ç–∞–∫–æ–∂ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–Ω–æ–ø–∫—É"
                                               " –ú–µ–Ω—é —â–æ –º—ñ—Å—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ñ <b>–∫–æ–º–∞–Ω–¥–∏</b>, –∞–±–æ –∂ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç–∏ —ó—Ö "
                                               "–≤–ª–∞—Å–Ω–æ—Ä—É—á. –û—Å—å –¥–µ–∫—ñ–ª—å–∫–∞ –∫–ª—é—á–æ–≤–∏—Ö –∫–æ–º–∞–Ω–¥:\n- <b>/start</b> - –∑–∞–Ω–æ–≤–æ "
                                               "–ø–æ—á–∞—Ç–∏ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ –±–æ—Ç–æ–º MoonAudioProduction;\n- <b>/index_ua</b> - "
                                               "–≤—ñ–¥–æ–±—Ä–∞–∂–∞—î —Å—Ç–æ—Ä—ã–Ω–∫—É –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é; \n- <b>/info_ua</b> - –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î "
                                               "–∫–æ–Ω—Ç–∞–∫—Ç–∏ –∞–≤—Ç–æ—Ä–∞;\n\n<b>–ü.–°. - –Ø–∫—â–æ –Ω–µ —Ö–æ—á–µ—à –ø–∏—Å–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É - –º–æ–∂–µ—à "
                                               "–ø—Ä–æ—Å—Ç–æ –∂–º–∞–∫–∞—Ç–∏ –Ω–∞ –Ω–µ—ó üòú</b>", parse_mode="html")

    else:
        chat_bot.send_message(message.chat.id, "I'm sorry, but I don't understand you... üòû/ –í–∏–±–∞—á, –∞–ª–µ —è –Ω–µ —Ä–æ–∑—É–º—ñ—é "
                                               "—Ç–µ–±–µ... üòû(", parse_mode="html")


if __name__ == '__main__':
    print("Starting bot...")

print("Bot is polling...")
chat_bot.polling(none_stop=True)
